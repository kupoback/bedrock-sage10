{"version":3,"file":"js/dynamic/node_modules_roots_bud-client_lib_hot_components_indicator_index_js.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACplLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://sage/./node_modules/@roots/bud-client/lib/hot/components/indicator/index.js","webpack://sage/./node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.component.js","webpack://sage/./node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.controller.js","webpack://sage/./node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.pulse.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.make = void 0;\nconst indicator_component_js_1 = require(\"./indicator.component.js\");\nconst indicator_controller_js_1 = require(\"./indicator.controller.js\");\nconst make = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (customElements.get(`bud-activity-indicator`))\n        return;\n    customElements.define(`bud-activity-indicator`, indicator_component_js_1.Component);\n    return new indicator_controller_js_1.Controller();\n});\nexports.make = make;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Component = void 0;\nconst indicator_pulse_js_1 = require(\"./indicator.pulse.js\");\n/**\n * Indicator web component\n * @public\n */\nclass Component extends HTMLElement {\n    /**\n     * Class constructor\n     * @public\n     */\n    constructor() {\n        super();\n        /**\n         * Component name\n         * @public\n         */\n        this.name = `bud-activity-indicator`;\n        /**\n         * Status indicator colors\n         * @public\n         */\n        this.colors = {\n            success: [4, 120, 87, 1],\n            error: [220, 38, 38, 1],\n            warn: [252, 211, 77, 1],\n            pending: [59, 130, 246, 1],\n        };\n        this.renderShadow();\n    }\n    /**\n     * Root div querySelector selector\n     * @public\n     */\n    get selector() {\n        return `.${this.name}`;\n    }\n    /**\n     * Get accessor: has errors\n     * @public\n     */\n    get hasErrors() {\n        return this.getAttribute(`has-errors`) == `true`;\n    }\n    /**\n     * Get accessor: has warnings\n     * @public\n     */\n    get hasWarnings() {\n        return this.getAttribute(`has-warnings`) == `true`;\n    }\n    /**\n     * Render status indicator\n     * @public\n     */\n    renderShadow() {\n        const container = document.createElement(`div`);\n        container.classList.add(this.name);\n        container.innerHTML = `\n    <style>\n    .bud-activity-indicator {\n      position: fixed;\n      width: 10px;\n      height: 10px;\n      left: 10px;\n      bottom: 10px;\n      z-index: 9999;\n      margin: 5px;\n      padding: 5px;\n      -webkit-transition:\n        all .6s ease-in-out,\n      transition:\n        all .6s ease-in-out;\n      animation-fill-mode: forwards;\n      pointer-events: none;\n      border-radius: 50%;\n      transform: scale(0);\n      opacity: 0;\n    }\n\n    .show {\n      opacity: 1;\n      background-color: rgba(255, 255, 255, 1);\n      transform: scale(1);\n      transition:\n        all .6s ease-in-out;\n    }\n\n    ${(0, indicator_pulse_js_1.pulse)(`success`, this.colors.success)}\n    ${(0, indicator_pulse_js_1.pulse)(`error`, this.colors.error)}\n    ${(0, indicator_pulse_js_1.pulse)(`warning`, this.colors.warn)}\n    ${(0, indicator_pulse_js_1.pulse)(`pending`, this.colors.pending)}\n\n    </style>\n    `;\n        this.attachShadow({ mode: `open` }).appendChild(container);\n    }\n    /**\n     * Show status indicator\n     * @public\n     */\n    show() {\n        this.hideTimeout && clearTimeout(this.hideTimeout);\n        this.shadowRoot.querySelector(this.selector).classList.add(`show`);\n    }\n    /**\n     * Hide status indicator\n     */\n    hide() {\n        this.hideTimeout = setTimeout(() => {\n            this.shadowRoot.querySelector(this.selector).classList.remove(`show`);\n        }, 2000);\n    }\n    /**\n     * Status is pending\n     * @public\n     */\n    onPending() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`error`, `warning`, `success`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`pending`);\n        this.hide();\n    }\n    /**\n     * Status is success\n     * @public\n     */\n    onSuccess() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`error`, `warning`, `pending`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`success`);\n        this.hide();\n    }\n    /**\n     * Status is error\n     * @public\n     */\n    onError() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`warning`, `success`, `pending`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`error`);\n    }\n    /**\n     * Status is warning\n     * @public\n     */\n    onWarning() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`error`, `success`, `pending`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`warning`);\n    }\n    static get observedAttributes() {\n        return [`has-errors`, `has-warnings`, `action`];\n    }\n    attributeChangedCallback() {\n        if (this.hasAttribute(`has-errors`))\n            return this.onError();\n        if (this.hasAttribute(`has-warnings`))\n            return this.onWarning();\n        if (!this.hasAttribute(`has-errors`) &&\n            !this.hasAttribute(`has-warnings`) &&\n            this.getAttribute(`action`) === `built`)\n            return this.onSuccess();\n        if (this.getAttribute(`action`) == `building` ||\n            this.getAttribute(`action`) == `sync`)\n            return this.onPending();\n    }\n}\nexports.Component = Component;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Controller = void 0;\n/**\n * Activity indicator controller\n * @public\n */\nclass Controller {\n    /**\n     * Initialization\n     * @public\n     */\n    constructor() {\n        /**\n         * Active WHM payload\n         * @public\n         */\n        this.payload = null;\n        this.node = document.createElement(`bud-activity-indicator`);\n        this.update = this.update.bind(this);\n    }\n    /**\n     * Append `bud-error` element to the DOM\n     *\n     * @public\n     */\n    addNode() {\n        var _a;\n        if (document.body.querySelector(`bud-activity-indicator`)) {\n            if (typeof this.timer.unref === `function`)\n                this.timer.unref();\n            this.removeNode();\n        }\n        (_a = document.body) === null || _a === void 0 ? void 0 : _a.appendChild(this.node);\n        this.timer = setTimeout(this.removeNode, 3000);\n    }\n    /**\n     * Remove `bud-error` element from the DOM (if present)\n     *\n     * @public\n     */\n    removeNode() {\n        var _a;\n        (_a = document.body.querySelector(`bud-activity-indicator`)) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    /**\n     * Update activity indicator\n     * @public\n     */\n    update(payload) {\n        var _a, _b;\n        this.node.toggleAttribute(`has-errors`, ((_a = payload.errors) === null || _a === void 0 ? void 0 : _a.length) ? true : false);\n        this.node.toggleAttribute(`has-warnings`, ((_b = payload.warnings) === null || _b === void 0 ? void 0 : _b.length) ? true : false);\n        this.node.setAttribute(`action`, payload.action);\n        this.addNode();\n    }\n}\nexports.Controller = Controller;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pulse = void 0;\n/**\n * CSS animation for reload indicator\n * @public\n */\nconst pulse = (name, color) => `\n  .${name} {\n    box-shadow: 0 0 0 0 rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]});\n    animation: ${name}__pulse 2s infinite;\n    transition: all 0.4s ease-in-out;\n  }\n\n  .${name}:not(.show) {\n    background-color: rgba(${color[0]}, ${color[1]}, ${color[2]}, 0);\n  }\n\n  .${name}.show {\n    background-color: rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]});\n  }\n\n  @keyframes ${name}__pulse {\n    0% {\n      transform: scale(0.95);\n      box-shadow: 0 0 0 0 rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.7);\n    }\n\n    70% {\n      transform: scale(1);\n      box-shadow: 0 0 0 10px rgba(${color[0]}, ${color[1]}, ${color[2]}, 0);\n    }\n\n    100% {\n      transform: scale(0.95);\n      box-shadow: 0 0 0 0 rgba(${color[0]}, ${color[1]}, ${color[2]}, 0);\n    }\n  }\n`;\nexports.pulse = pulse;\n"],"names":[],"sourceRoot":""}