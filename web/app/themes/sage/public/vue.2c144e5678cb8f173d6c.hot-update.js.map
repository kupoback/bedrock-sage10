{"version":3,"file":"vue.2c144e5678cb8f173d6c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA","sources":["webpack://sage/./resources/vue/Vuex/blog/mutations.js","webpack://sage/webpack/runtime/getFullHash"],"sourcesContent":["/**\n * A method to update a state variable based on the param and key set\n *\n * @param {object} currentState Vuex store state\n * @param {object} params       Any data passed to update\n */\nexport function updateState(currentState, params)\n{\n\tObject.keys(params)\n\t\t.map(key => currentState[key] = params[key]);\n}\n\nexport function searchPostTypeCount(currentState, {postTypeCount})\n{\n\tconst getCount = {};\n\tif (Object.keys(postTypeCount).length) {\n\t\tfor (const [postType, array] of Object.entries(postTypeCount)) {\n\t\t\tgetCount[postType] = array;\n\t\t}\n\t}\n\tcurrentState.searchPostTypeCount = getCount;\n}\n\n/**\n * Sets up a query for the state and the URLSearchParams\n *\n * @param {object} currentState Vuex store state\n * @param {object} params       Any data passed to update\n */\nexport function setQuery(currentState, params)\n{\n\tlet searchParameters = new URLSearchParams();\n\tif (Object.keys(params).length === 0) currentState.queryParams = {};\n\telse {\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value || value.length) {\n\t\t\t\tsearchParameters.set(key, value.toString());\n\t\t\t\tcurrentState.queryParams[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\tcurrentState.searchParams = searchParameters;\n}\n\n/**\n * Removes an item from the queryParams state\n *\n * @param {object} currentState Vuex store state\n * @param {object} params       Any data passed to update\n */\nexport function removeFromQuery(currentState, params)\n{\n\tif (Object.keys(params).length) {\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tdelete currentState.queryParams[key];\n\t\t}\n\t}\n}\n\n/**\n * Build the Vuex query based on the URL params\n *\n * @param {object} currentState Vuex store state\n */\nexport function buildQuery(currentState)\n{\n\tconst stateQuery = {};\n\tconst queryParams = new URL(window.location).searchParams;\n\n\tqueryParams.forEach((value, key) => {\n\t\tif (key === 'categories') stateQuery[key] = value.split(',')\n\t\telse if (key === 'search' || key === 's') currentState.searchText = value;\n\t\telse if (key === 'page_num') currentState.page = Number(value);\n\t\telse stateQuery[key] = value\n\t})\n\n\tcurrentState.queryParams = stateQuery\n}\n","__webpack_require__.h = function() { return \"f8a35cdd0deee91cfefb\"; }"],"names":[],"sourceRoot":""}