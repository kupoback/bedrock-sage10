{"version":3,"file":"vue.de820dcd332e5997baa4.hot-update.js","mappings":";;;;;;;;;;;;;;AAAA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA","sources":["webpack://sage/./resources/vue/Vuex/blog/actions.js","webpack://sage/webpack/runtime/getFullHash"],"sourcesContent":["import axios from \"axios\";\n\nconst windowUrl = new URL(window.location);\n\n/**\n * Makes an API call and setups data to store state,\n * as well as whether to update the browser history\n *\n * @param {string} api The API Url to make a call to\n * @param {object} store The vuex store state\n * @param {object} config Any config content to send to\n * @param {int} page The page number\n * @param {boolean} updateHistory Whether or not to update the browser history\n * @param {boolean} pushData Whether to add data to the var or replace it\n *\n * @returns {Promise<unknown>}\n */\nconst makeApiCall = (api, store, config = {params: {}}, page = 1, updateHistory = false, pushData = false) => {\n\tupdateLoading(store, true);\n\tlet commitType = \"updateState\";\n\tif (pushData) commitType = \"mergeData\";\n\n\treturn axios\n\t\t.get(api, config)\n\t\t.then(({data, status}) => {\n\t\t\tconst {maxPages, posts, postTypeCount} = data;\n\t\t\t(status === 200 && data.status !== 404) && store.commit(commitType, {maxPages: Number(maxPages), page, posts});\n\t\t\tpostTypeCount !== undefined && store.commit('searchPostTypeCount', {postTypeCount});\n\t\t})\n\t\t.catch(err => console.error(err))\n\t\t.finally(() => {\n\t\t\t// Remove the Page Number from the query params if on the first page\n\t\t\tif (page > 1) config.params.page_num = page;\n\t\t\telse delete config.params.page_num;\n\n\t\t\t// Remove the updateCount from the query params\n\t\t\tdelete config.params.updateCount;\n\n\t\t\tstore.commit(\"setQuery\", config.params);\n\t\t\tif (updateHistory) store.dispatch(\"updateBrowserHistory\", {updateHistory});\n\t\t\tupdateLoading(store);\n\t\t});\n};\n\nexport default {};\n","__webpack_require__.h = function() { return \"eaf86aada23cbddee0d7\"; }"],"names":[],"sourceRoot":""}